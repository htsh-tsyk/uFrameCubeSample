// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UniRx;
using uFrame.MVVM;
using uFrame.Kernel;
using uFrame.IOC;
using uFrame.Serialization;


public class GameControllerBase : uFrame.MVVM.Controller {
    
    private uFrame.MVVM.IViewModelManager _GameViewModelManager;
    
    [uFrame.IOC.InjectAttribute("Game")]
    public uFrame.MVVM.IViewModelManager GameViewModelManager {
        get {
            return _GameViewModelManager;
        }
        set {
            _GameViewModelManager = value;
        }
    }
    
    public IEnumerable<GameViewModel> GameViewModels {
        get {
            return GameViewModelManager.OfType<GameViewModel>();
        }
    }
    
    public override void Setup() {
        base.Setup();
        // This is called when the controller is created
    }
    
    public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
        base.Initialize(viewModel);
        // This is called when a viewmodel is created
        this.InitializeGame(((GameViewModel)(viewModel)));
    }
    
    public virtual GameViewModel CreateGame() {
        return ((GameViewModel)(this.Create(Guid.NewGuid().ToString())));
    }
    
    public override uFrame.MVVM.ViewModel CreateEmpty() {
        return new GameViewModel(this.EventAggregator);
    }
    
    public virtual void InitializeGame(GameViewModel viewModel) {
        // This is called when a GameViewModel is created
        viewModel.AddCube.Action = this.AddCubeHandler;
        GameViewModelManager.Add(viewModel);
    }
    
    public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
        base.DisposingViewModel(viewModel);
        GameViewModelManager.Remove(viewModel);
    }
    
    public virtual void AddCube(GameViewModel viewModel) {
    }
    
    public virtual void AddCubeHandler(AddCubeCommand command) {
        this.AddCube(command.Sender as GameViewModel);
    }
}

public class CubeControllerBase : uFrame.MVVM.Controller {
    
    private uFrame.MVVM.IViewModelManager _CubeViewModelManager;
    
    [uFrame.IOC.InjectAttribute("Cube")]
    public uFrame.MVVM.IViewModelManager CubeViewModelManager {
        get {
            return _CubeViewModelManager;
        }
        set {
            _CubeViewModelManager = value;
        }
    }
    
    public IEnumerable<CubeViewModel> CubeViewModels {
        get {
            return CubeViewModelManager.OfType<CubeViewModel>();
        }
    }
    
    public override void Setup() {
        base.Setup();
        // This is called when the controller is created
    }
    
    public override void Initialize(uFrame.MVVM.ViewModel viewModel) {
        base.Initialize(viewModel);
        // This is called when a viewmodel is created
        this.InitializeCube(((CubeViewModel)(viewModel)));
    }
    
    public virtual CubeViewModel CreateCube() {
        return ((CubeViewModel)(this.Create(Guid.NewGuid().ToString())));
    }
    
    public override uFrame.MVVM.ViewModel CreateEmpty() {
        return new CubeViewModel(this.EventAggregator);
    }
    
    public virtual void InitializeCube(CubeViewModel viewModel) {
        // This is called when a CubeViewModel is created
        CubeViewModelManager.Add(viewModel);
    }
    
    public override void DisposingViewModel(uFrame.MVVM.ViewModel viewModel) {
        base.DisposingViewModel(viewModel);
        CubeViewModelManager.Remove(viewModel);
    }
}
